// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoReceitas;

#nullable disable

namespace Teste.Migrations
{
    [DbContext(typeof(DbArquivo))]
    [Migration("20221129171018_TESTEBANCO1.1")]
    partial class TESTEBANCO11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Receitas.Models.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IngredienteUnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Receitas.Models.Models.IngredientesReceitas", b =>
                {
                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientesReceitasId")
                        .HasColumnType("int");

                    b.Property<int>("Un_MedidaId")
                        .HasColumnType("int");

                    b.HasKey("ReceitaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("IngredientesReceitasId");

                    b.ToTable("IngredientesReceitas");
                });

            modelBuilder.Entity("Receitas.Models.Models.Receita", b =>
                {
                    b.Property<int>("ReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceitaId"));

                    b.Property<string>("ModoPreparo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rendimento")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("Receitas.Models.Models.Un_Medida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Un_Medida");
                });

            modelBuilder.Entity("Receitas.Models.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Receitas.Models.Models.IngredientesReceitas", b =>
                {
                    b.HasOne("Receitas.Models.Models.Ingrediente", "Ingrediente")
                        .WithMany("ListaReceitas")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Receitas.Models.Models.Un_Medida", "UnidadeMedida")
                        .WithMany("IngredientesReceitas")
                        .HasForeignKey("IngredientesReceitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Receitas.Models.Models.Receita", "Receita")
                        .WithMany("ListaReceitas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receita");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("Receitas.Models.Models.Receita", b =>
                {
                    b.HasOne("Receitas.Models.Models.Usuario", "Usuario")
                        .WithMany("ReceitasCriadas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Receitas.Models.Models.Ingrediente", b =>
                {
                    b.Navigation("ListaReceitas");
                });

            modelBuilder.Entity("Receitas.Models.Models.Receita", b =>
                {
                    b.Navigation("ListaReceitas");
                });

            modelBuilder.Entity("Receitas.Models.Models.Un_Medida", b =>
                {
                    b.Navigation("IngredientesReceitas");
                });

            modelBuilder.Entity("Receitas.Models.Models.Usuario", b =>
                {
                    b.Navigation("ReceitasCriadas");
                });
#pragma warning restore 612, 618
        }
    }
}
