--Criação do database
CREATE DATABASE MINIERP_MULT
GO
USE MINIERP_MULT

--Primeiro será criado os cadastros complementares por área
--Sempre devemos iniciar pelo alicerce do projeto
--Aqui será a tabela empresa
--Depois criando tabelas sem dependencias

CREATE TABLE EMPRESA(
COD_EMPRESA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
NOME_EMPRESA VARCHAR(50),
FANTASIA VARCHAR(20)
);


--Tabela unidade federal

CREATE TABLE UF(
COD_UF VARCHAR(2) NOT NULL PRIMARY KEY,
NOME_UF VARCHAR(30)NOT NULL
)

--Aqui estamos criando a tabela cidades bela UF
CREATE TABLE CIDADES(
COD_CIDADE VARCHAR(7) NOT NULL PRIMARY KEY,
COD_UF VARCHAR(2) NOT NULL,
NOME_MUN VARCHAR(50) NOT NULL,
CONSTRAINT FK_C1D1 FOREIGN KEY (COD_UF) REFERENCES UF(COD_UF) --Referencia do nosso campo COD_UF de cidades com campo COD_uf da tabela UF
)


--Criação da tabela clientes
CREATE TABLE CLIENTES(
COD_EMPRESA INT NOT NULL,
ID_CLIENTE INT IDENTITY(1,1) NOT NULL,
RAZAO_CLIENTE VARCHAR(100)NOT NULL,
FANTASIA VARCHAR(15) NOT NULL,
ENDERECO VARCHAR(50) NOT NULL,
NMR VARCHAR(10) NOT NULL,
BAIRRO VARCHAR(30) NOT NULL,
COD_CIDADE VARCHAR(7) NOT NULL,
CEP VARCHAR(8),
CNPJ_CPF VARCHAR(15),
TIPO_CLIENTE NCHAR(1)  CONSTRAINT CK_TC1 CHECK (TIPO_CLIENTE in ('F', 'J')),
DATA_CADASTRO DATETIME NOT NULL,
COD_PAGTO INT,
CONSTRAINT PK_CLI1 PRIMARY KEY (COD_EMPRESA,ID_CLIENTE),  --Aqui estamos fazendo uma chave composto por 2 primary key(cod_empresa,id_cliente)
CONSTRAINT FK_CLI1 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADES(COD_CIDADE), -- Aqui estamos fazendo um relacionamento entre COD_CIDADE(CLIENTE) com a COD_CIDADE(CIDADE)
CONSTRAINT FK_CLI2 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA) -- Aqui estamos fazendo um relacionamento entre COD_EMPRESA(CLIENTE) COM A COD_EMPRESA(EMPRESA)
)

CREATE TABLE FORNECEDORES
(
COD_EMPRESA INT NOT NULL,
ID_FOR INT IDENTITY(1,1) NOT NULL,
RAZAO_FORNEC VARCHAR(100) NOT NULL,
FANTASIA VARCHAR(15) NOT NULL,
ENDERECO VARCHAR(50) NOT NULL,
NRO VARCHAR(10) NOT NULL,
BAIRRO VARCHAR(20) NOT NULL,
COD_CIDADE VARCHAR(7) NOT NULL,
CEP VARCHAR(8),
CNPJ_CPF VARCHAR(15),
TIPO_FORNEC NCHAR(1) CONSTRAINT CK_TF1 CHECK (TIPO_FORNEC IN ('F','J')),
DATA_CADASTRO DATETIME NOT NULL,
COD_PAGTO INT,
CONSTRAINT PK_FOR1 PRIMARY KEY (COD_EMPRESA,ID_FOR),
CONSTRAINT FK_FOR1 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADES(COD_CIDADE),
CONSTRAINT FK_FOR2 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA))

CREATE TABLE TIPO_MAT(
COD_EMPRESA INT NOT NULL,
COD_TIP_MAT INT NOT NULL,
DESC_TIP_MAT VARCHAR (20) NOT NULL,
CONSTRAINT PK_TIP_M1 PRIMARY KEY (COD_EMPRESA, COD_TIP_MAT),
CONSTRAINT FK_TIP_M1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA))


CREATE TABLE MATERIAL(
COD_EMPRESA INT NOT NULL,
COD_MAT INT NOT NULL,
DESCRICAO VARCHAR(50) NOT NULL,
PRECO_UNIT DECIMAL(10,2) NOT NULL,
COD_TIP_MAT INT NOT NULL,
ID_FOR INT,
CONSTRAINT PK_MAT1 PRIMARY KEY (COD_EMPRESA,COD_MAT),
CONSTRAINT FK_MAT1 FOREIGN KEY (COD_EMPRESA,COD_TIP_MAT) REFERENCES TIPO_MAT(COD_EMPRESA,COD_TIP_MAT))


CREATE INDEX IX_MAT ON MATERIAL(COD_EMPRESA,COD_TIP_MAT);


CREATE TABLE ORDEM_PROD(
COD_EMPRESA INT NOT NULL,
ID_ORDEM INT IDENTITY(1,1) NOT NULL,
COD_MAT_PROD INT NOT NULL,
QTD_PLAN DECIMAL(10,2) NOT NULL,
QTD_PROD DECIMAL(10,2) NOT NULL,
DATA_INI DATE,
DATA_FIM DATE,
SITUACAO CHAR(1),
CONSTRAINT PK_OP1 PRIMARY KEY(COD_EMPRESA,ID_ORDEM),
CONSTRAINT FK_OP1 FOREIGN KEY (COD_EMPRESA,COD_MAT_PROD) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))

CREATE TABLE APONTAMENTOS(
COD_EMPRESA INT NOT NULL,
ID_APON INT IDENTITY(1,1) NOT NULL,
ID_ORDEM INT NOT NULL,
COD_MAT_PROD INT,
QTD_APON DECIMAL(10,2),
DATA_APON DATETIME NOT NULL,
CONSTRAINT FK_APON1 FOREIGN KEY (COD_EMPRESA,COD_MAT_PROD) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
CONSTRAINT FK_APON2 FOREIGN KEY (COD_EMPRESA,ID_ORDEM) REFERENCES ORDEM_PROD(COD_EMPRESA,ID_ORDEM),
CONSTRAINT PK_APON1 PRIMARY KEY (COD_EMPRESA,ID_APON));


CREATE TABLE FICHA_TECNICA
(
COD_EMPRESA INT NOT NULL,
ID_REF INT IDENTITY(1,1) NOT NULL,
COD_MAT_PROD INT NOT NULL,
COD_MAT_NECES INT NOT NULL,
QTD_NECES DECIMAL(10,2) NOT NULL,
CONSTRAINT FK_FIC1 FOREIGN KEY (COD_EMPRESA,COD_MAT_PROD) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
CONSTRAINT FK_FIC2 FOREIGN KEY (COD_EMPRESA,COD_MAT_NECES) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))


CREATE TABLE CONSUMO
(
COD_EMPRESA INT NOT NULL,
ID_APON INT NOT NULL,
COD_MAT_NECES INT NOT NULL,
QTD_CONSUMIDA DECIMAL(10,2) NOT NULL,
LOTE VARCHAR(20) NOT NULL,
CONSTRAINT FK_CONS1 FOREIGN KEY (COD_EMPRESA,COD_MAT_NECES) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
CONSTRAINT FK_CONS2 FOREIGN KEY (COD_EMPRESA, ID_APON) REFERENCES APONTAMENTOS(COD_EMPRESA,ID_APON));

CREATE TABLE ESTOQUE(
COD_EMPRESA INT NOT NULL,
COD_MAT INT NOT NULL,
QTD_SALDO DECIMAL(10,2) NOT NULL,
CONSTRAINT FK_EST1 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
CONSTRAINT PK_EST1 PRIMARY KEY (COD_EMPRESA,COD_MAT))

--DROP TABLE ESTOQUE_LOTE
CREATE TABLE ESTOQUE_LOTE
(
COD_EMPRESA INT NOT NULL,
COD_MAT INT NOT NULL,
LOTE VARCHAR(20) NOT NULL,
QTD_LOTE DECIMAL (10,2) NOT NULL,
CONSTRAINT PK_ESTL1 PRIMARY KEY (COD_EMPRESA,COD_MAT,LOTE),
CONSTRAINT FK_ESTL1 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))

CREATE TABLE ESTOQUE_MOV
(
COD_EMPRESA INT NOT NULL,
ID_MOV INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
TIP_MOV VARCHAR(1),
COD_MAT INT NOT NULL,
LOTE VARCHAR(20) NOT NULL,
QTD DECIMAL(10,2) NOT NULL,
DATA_MOV DATE NOT NULL,
DATA_HORA DATETIME NOT NULL,
CONSTRAINT FK_ESTM1 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))

CREATE TABLE PED_COMPRAS
(
COD_EMPRESA INT NOT NULL,
NUM_PEDIDO INT NOT NULL,
ID_FOR INT NOT NULL,
COD_PAGTO INT NOT NULL,
DATA_PEDIDO DATE NOT NULL,
DATA_ENTREGA DATE NOT NULL,
SITUACAO NCHAR(1) NOT NULL,
TOTAL_PED DECIMAL (10,2),
CONSTRAINT Fk_PEDC1 FOREIGN KEY (COD_EMPRESA,ID_FOR) REFERENCES FORNECEDORES(COD_EMPRESA,ID_FOR),
CONSTRAINT PK_PEDC1 PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO));


--DROP TABLE PED_COMPRAS_ITENS
CREATE TABLE PED_COMPRAS_ITENS
(
COD_EMPRESA INT NOT NULL,
NUM_PEDIDO INT NOT NULL,
SEQ_MAT INT NOT NULL,
COD_MAT INT NOT NULL,
QTD INT NOT NULL,
VAL_UNIT DECIMAL (10,2) NOT NULL,
CONSTRAINT PK_PEDCIT1 PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO,SEQ_MAT),
CONSTRAINT FK_PEDIT1 FOREIGN KEY (COD_EMPRESA,NUM_PEDIDO) REFERENCES PED_COMPRAS(COD_EMPRESA,NUM_PEDIDO),
CONSTRAINT FK_PEDIT2 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))


CREATE TABLE CENTRO_CUSTO
(
COD_EMPRESA INT NOT NULL,
COD_CC VARCHAR(4) NOT NULL,
NOME_CC VARCHAR(20) NOT NULL,
CONSTRAINT PK_CC1 PRIMARY KEY (COD_EMPRESA,COD_CC),
CONSTRAINT FK_CC1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA));

CREATE TABLE CARGOS
(
COD_EMPRESA INT NOT NULL,
COD_CARGO INT IDENTITY(1,1) NOT NULL,
NOME_CARGO VARCHAR(50),
CONSTRAINT PK_CARG1 PRIMARY KEY (COD_EMPRESA,COD_CARGO),
CONSTRAINT FK_CARG1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA));

CREATE TABLE FUNCIONARIO
(
COD_EMPRESA INT NOT NULL,
MATRICULA INT NOT NULL,
COD_CC VARCHAR(4) NOT NULL,
NOME VARCHAR(50) NOT NULL,
RG VARCHAR(15) NOT NULL,
CPF VARCHAR(15) NOT NULL,
ENDERECO VARCHAR(50) NOT NULL,
NUMERO VARCHAR(10) NOT NULL,
BAIRRO VARCHAR(50) NOT NULL,
COD_CIDADE VARCHAR(7) NOT NULL,
DATA_ADMISS DATE NOT NULL,
DATE_DEMISS DATE,
DATA_NASC DATE NOT NULL,
TELEFONE VARCHAR(15) NOT NULL,
COD_CARGO INT NOT NULL,
CONSTRAINT FK_FUNC1 FOREIGN KEY (COD_EMPRESA,COD_CC) REFERENCES CENTRO_CUSTO(COD_EMPRESA,COD_CC),
CONSTRAINT FK_FUNC2 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADES(COD_CIDADE),
CONSTRAINT FK_FUNC3 FOREIGN KEY (COD_EMPRESA,COD_CARGO) REFERENCES CARGOS(COD_EMPRESA,COD_CARGO),
CONSTRAINT PK_FUNC1 PRIMARY KEY (COD_EMPRESA,MATRICULA));


CREATE TABLE SALARIO(
COD_EMPRESA INT NOT NULL,
MATRICULA INT NOT NULL,
SALARIO DECIMAL(10,2) NOT NULL,
CONSTRAINT FK_SAL2 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
CONSTRAINT PK_SAL1 PRIMARY KEY (COD_EMPRESA,MATRICULA));


CREATE TABLE FOLHA_PAGTO
(
COD_EMPRESA INT NOT NULL,
MATRICULA INT NOT NULL,
TIPO_PGTO CHAR(1) NOT NULL,
TIPO CHAR(1) NOT NULL,
EVENTO VARCHAR (30) NOT NULL,
MES_REF VARCHAR (2) NOT NULL,
ANO_REF VARCHAR (4) NOT NULL,
DATA_PAGTO DATE NOT NULL,
VALOR DECIMAL(10,2) NOT NULL,
CONSTRAINT Fk_FP1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA))

CREATE INDEX IX1_FOLHA ON FOLHA_PAGTO(COD_EMPRESA,MATRICULA);


CREATE TABLE USUARIOS
(
COD_EMPRESA INT NOT NULL,
LOGIN VARCHAR(30) NOT NULL PRIMARY KEY,
MATRICULA INT NOT NULL,
SENHA VARCHAR(32) NOT NULL,
SITUACAO CHAR(1) NOT NULL,
CONSTRAINT FK_US1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA));

CREATE TABLE CONTAS_RECEBER
(
COD_EMPRESA INT NOT NULL,
ID_DOC INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
ID_CLIENTE INT NOT NULL,
ID_DOC_ORIG INT NOT NULL,
PARC INT NOT NULL,
DATA_VENC DATE NOT NULL,
DATA_PAGTO DATE,
VALOR DECIMAL (10,2),
CONSTRAINT FK_CR1 FOREIGN KEY (COD_EMPRESA,ID_CLIENTE) REFERENCES CLIENTES(COD_EMPRESA,ID_CLIENTE))


CREATE TABLE CONTAS_PAGAR
(
COD_EMPRESA INT NOT NULL,
ID_DOC INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
ID_FOR INT NOT NULL,
ID_DOC_ORIG INT NOT NULL,
PARC INT NOT NULL,
DATA_VENC DATE NOT NULL,
DATA_PAGTO DATE,
VALOR DECIMAL(10,2),
CONSTRAINT FK_CP1 FOREIGN KEY (COD_EMPRESA,ID_FOR) REFERENCES FORNECEDORES(COD_EMPRESA,ID_FOR))

CREATE TABLE COND_PAGTO
(
COD_PAGTO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
NOME_CP VARCHAR(50) NOT NULL
);

CREATE TABLE COND_PAGTO_DET
(
COD_PAGTO INT NOT NULL,
PARC INT NOT NULL,
DIAS INT NOT NULL,
PCT DECIMAL (10,2) NOT NULL,
CONSTRAINT FK_CONDP1 FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO))


CREATE TABLE PED_VENDAS
(
COD_EMPRESA INT NOT NULL,
NUM_PEDIDO INT NOT NULL,
ID_CLIENTE INT NOT NULL,
COD_PAGTO INT NOT NULL,
DATA_PEDIDO DATE NOT NULL,
DATA_ENTREGA DATE NOT NULL,
SITUACAO NCHAR(1) NOT NULL,
TOTAL_PED DECIMAL (10,2),
CONSTRAINT FK_PV1 FOREIGN KEY (COD_EMPRESA,ID_CLIENTE) REFERENCES CLIENTES(COD_EMPRESA,ID_CLIENTE),
CONSTRAINT FK_PV2 FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO),
CONSTRAINT PK_PV1 PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO));


--DROP TABLE PED_VENDAS_ITENS
CREATE TABLE PED_VENDAS_ITENS
(
COD_EMPRESA INT NOT NULL,
NUM_PEDIDO INT NOT NULL,
SEQ_MAT INT NOT NULL,
COD_MAT INT NOT NULL,
QTD INT NOT NULL,
VAL_UNIT DECIMAL(10,2) NOT NULL,
CONSTRAINT FK_PVIT1 FOREIGN KEY (COD_EMPRESA,NUM_PEDIDO) REFERENCES PED_VENDAS(COD_EMPRESA,NUM_PEDIDO),
CONSTRAINT PK_PVIT1 PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO,SEQ_MAT)
)

CREATE TABLE VENDEDORES
(
COD_EMPRESA INT NOT NULL,
MATRICULA INT NOT NULL,
CONSTRAINT FK_VEND1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA));

CREATE TABLE GERENTES
(
COD_EMPRESA INT NOT NULL,
MATRICULA INT NOT NULL,
CONSTRAINT FK_GER1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA));



CREATE TABLE CANAL_VENDAS_G_V
(
COD_EMPRESA INT NOT NULL,
MATRICULA_GER INT NOT NULL,
MATRICULA_VEND INT,
CONSTRAINT FK_CGV1 FOREIGN KEY (COD_EMPRESA,MATRICULA_GER) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
CONSTRAINT FK_CGV2 FOREIGN KEY (COD_EMPRESA,MATRICULA_VEND) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
CONSTRAINT PK_CGV1 PRIMARY KEY (COD_EMPRESA,MATRICULA_GER,MATRICULA_VEND))


CREATE TABLE CANAL_VENDAS_V_C
(
COD_EMPRESA INT NOT NULL,
MATRICULA_VEND INT NOT NULL,
ID_CLIENTE INT NOT NULL,
CONSTRAINT FK_CVC1 FOREIGN KEY (COD_EMPRESA,MATRICULA_VEND) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
CONSTRAINT FK_CVC2 FOREIGN KEY (COD_EMPRESA,ID_CLIENTE) REFERENCES CLIENTES(COD_EMPRESA,ID_CLIENTE));

CREATE TABLE META_VENDAS
(
COD_EMPRESA INT NOT NULL,
MATRICULA_VEND INT NOT NULL,
ANO VARCHAR(4) NOT NULL,
MES VARCHAR(2) NOT NULL,
VALOR DECIMAL(10,2),
CONSTRAINT FK_MV1 FOREIGN KEY (COD_EMPRESA,MATRICULA_VEND) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA))

CREATE TABLE CFOP
(
COD_CFOP VARCHAR(5) NOT NULL PRIMARY KEY,
DESC_CFOP VARCHAR(255) NOT NULL)

CREATE TABLE NOTA_FISCAL
(
COD_EMPRESA INT NOT NULL,
NUM_NF INT NOT NULL,
TIP_NF CHAR(1) NOT NULL,
COD_CFOP VARCHAR(5) NOT NULL,
ID_CLIFOR INT NOT NULL,
COD_PAGTO INT NOT NULL,
DATA_EMISSAO DATETIME NOT NULL,
DATA_ENTREGA DATE NOT NULL,
TOTAL_NF DECIMAL(10,2),
INTEGRADA_FIN CHAR(1) DEFAULT ('N'),
INTEGRADA_SUP CHAR(1) DEFAULT ('N'),
CONSTRAINT FK_NF1 FOREIGN KEY (COD_CFOP) REFERENCES CFOP(COD_CFOP),
CONSTRAINT FK_NF2 FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO),
CONSTRAINT PK_NF1 PRIMARY KEY (COD_EMPRESA,NUM_NF))


CREATE TABLE NOTA_FISCAL_ITENS
(
COD_EMPRESA INT NOT NULL,
NUM_NF INT NOT NULL,
SEQ_MAT INT NOT NULL,
COD_MAT INT NOT NULL,
QTD INT NOT NULL,
VAL_UNIT DECIMAL(10,2) NOT NULL,
PED_ORIG INT NOT NULL,
CONSTRAINT FK_NFIT1 FOREIGN KEY (COD_EMPRESA,NUM_NF) REFERENCES NOTA_FISCAL(COD_EMPRESA,NUM_NF),
CONSTRAINT FK_NFIT2 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT))


CREATE TABLE PARAM_INSS
(
VIGENCIA_INI DATE,
VIGENCIA_FIM DATE,
VALOR_DE DECIMAL(10,2) NOT NULL,
VALOR_ATE DECIMAL(10,2) NOT NULL,
PCT DECIMAL(10,2) NOT NULL
)

CREATE TABLE PARAM_IRRF
(
VIGENCIA_INI DATE,
VIGENCIA_FIM DATE,
VALOR_DE DECIMAL(10,2) NOT NULL,
VALOR_ATE DECIMAL (10,2) NOT NULL,
PCT DECIMAL(10,2) NOT NULL,
VAL_ISENT DECIMAL(10,2)
)

CREATE TABLE AUDITORIA_SALARIO
(
COD_EMPRESA INT NOT NULL,
MATRICULA VARCHAR(30) NOT NULL,
SAL_ANTES DECIMAL(10,2) NOT NULL,
SAL_DEPOIS DECIMAL(10,2) NOT NULL,
USUARIO VARCHAR(20) NOT NULL,
DATA_ATUALIZACAO DATETIME NOT NULL,
);

CREATE TABLE PARAMETROS
(
COD_EMPRESA INT NOT NULL,
PARAM VARCHAR(50) NOT NULL,
VALOR INT NOT NULL,
CONSTRAINT FK_PARAM1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA),
CONSTRAINT PK_PARAM1 PRIMARY KEY (COD_EMPRESA,PARAM))

CREATE INDEX IX_PARAM1 ON PARAMETROS(COD_EMPRESA,PARAM);



-- ADD CAMPO LOGIN TABELA APONTAMENTOS TREINAR ALTERACAO APOS CRIAR TABELA
ALTER TABLE APONTAMENTOS ADD LOGIN VARCHAR(30) NOT NULL;
-- ADICIONAR CAMPO LOTE NA TABELA APONTAMENTOS
ALTER TABLE APONTAMENTOS ADD LOTE VARCHAR(20) NOT NULL

-- ADD CAMPO LOGIN TABELA ESTOQUE_MOV CRIACAO APOS TABELA USUARIO
ALTER TABLE ESTOQUE_MOV ADD LOGIN VARCHAR(30) NOT NULL;




























-----------------------------Carga de tabelas----------------------
--Inserindo o coração do banco, as empresas
INSERT INTO EMPRESA VALUES ('XYZ BIKES','MATRIZ'),('XYZ BIKES','FILIAL');

SELECT * FROM EMPRESA;

INSERT INTO PARAMETROS VALUES (1,'PED_COMPRAS',0),(1,'MATRICULA',0),(1,'PED_VENDAS',0),(1,'NOTA_FISCAL',0),(2,'PED_COMPRAS',0),(2,'MATRICULA',0),(2,'PED_VENDAS',0),(2,'NOTA_FISCAL',0)

SELECT * FROM PARAMETROS;

--Pegando a referencia para passar os dados para outra tabela
SELECT DISTINCT b.uf,a.estado FROM CURSO.DBO.uf a inner join CURSO.DBO.senso b ON a.cod_uf = b.cod_uf;

--Agora vamos inserir dados na tabela UF, selecionando todos os estados da tabela 
INSERT INTO UF SELECT DISTINCT B.UF, A.estado FROM CURSO.DBO.UF a inner join CURSO.DBO.senso b ON a.cod_uf = b.cod_uf

--Check na tabela
SELECT * FROM UF;

--Pegando a referencia para passar os dados para outra tabela
SELECT * from curso.dbo.senso

--Agira vamos popular a tabela CIDADES, selecionando todas as cidades com seus respectivos cod_uf e juntando uf_cod_mun
INSERT INTO CIDADES SELECT a.uf+cod_mun,uf,a.nome_mun FROM CURSO.dbo.senso a

--Check na tabela
SELECT * FROM cidades;

SELECT * FROM CLIENTES

--Carga tabela clientes
INSERT INTO CLIENTES VALUES 
	(1,'CARLOS JACOB HOUSTON','CARLOS','RUA 1','375','SANTA HELENA','AC00013','13290000','123456987','F',GETDATE(),1),
	(1,'PEDRO LARSON OHIO','PEDRO','RUA 2','235','SANTA CLARA','AC00054','13290987','123456989','F',GETDATE(),2),
	(2,'BIKES ON LTDA','BIKES ON','RUA 14','279','MONTANHA','AC00104','13293245','343456987','J',GETDATE(),3),
	(2,'MY BIKE MY LIFE SA','BIKE LIFE','RUA 23','675','ALPES','AC00179','13379245','11290340','J',GETDATE(),3)



--SELECT * FROM FORNECEDORES

INSERT INTO FORNECEDORES VALUES 
(1,'SO BIKES LTD','SO BIKES','RUA 10','375','SANTA HILDA','AM02009','4839583','1029385738','J',getdate(),1), 
(1,'ESPECIAL BIKES LTD','ESPECIAL BIKES','RUA 51','125','SANTA GENEBRA','BA06899','2839584','1029375849','J',GETDATE(),1),
(2,'MONTA BIKES ME','MONTA BIKES','RUA 12','734','ALADO','GO17401','1029375','1029365849','J',GETDATE(),1),
(2,'TRAIL BIKES ME','TRAIL BIKES', 'RUA 56', '527','ESFERA','MG59308','2938574','9502837485','J',GETDATE(),1)


INSERT INTO TIPO_MAT VALUES (1,1,'MATERIA PRIMA'), (1,2,'PRODUTO ACABADO'), (1,3,'EMBALAGEM'),(1,4,'CONSUMO')
INSERT INTO TIPO_MAT VALUES (2,1,'MATERIA PRIMA'),(2,2,'PRODUTO ACABADO'),(2,3,'EMBALAGEM'),(2,4,'CONSUMO')

--SELECT * FROM TIPO_MAT

--SELECT * FROM MATERIAL

INSERT INTO MATERIAL VALUES 
(1,1,'BICICLETA ARO 29 PRETA MOD INFINITY','2500','2',''),
(1,2,'BICICLETA ARO 29 BRANCA MOD INFINITY','2500','2',''),
(1,3,'QUADRO ARO 29','500','1','1'),
(1,4,'KIT TRANSMISSAO','500','1','1'),
(1,5,'ARO 29','70','1','1'),
(1,6,'PNEU 29','100','1','2'),
(1,7,'CAMARA 29','25','1','2'),
(1,8,'SUSPENSÃO DIANTEIRA','250','1','2'),
(1,9,'BANCO','80','1','3'),
(1,10,'CANOTE','35','1','3'),
(1,11,'TINTA BRANCA','10','4','2'),
(1,12,'TINTA PRETA','10','4','2'),
(1,13,'MESA','500','1','1'),
(1,14,'GUIDON','50','1','2'),
(1,15,'LUVAS','50','1','2'),
(1,16,'CAIXA EMBALAGEM','10','3','2')


INSERT INTO FICHA_TECNICA VALUES (1,'1','3',1),(1,'1','4',1),
(1,'1','5',2),(1,'1','6',2),(1,'1','7',2),(1,'1','8',1),
(1,'1','9',1),(1,'1','10',1),(1,'1','12',0.250),
(1,'1','13',1),(1,'1','14',1),(1,'1','15',2),(1,'1','16',1)


INSERT INTO FICHA_TECNICA VALUES (1,'2','3',1),(1,'2','4',1),
(1,'2','5',2),(1,'2','6',2),(1,'2','7',2),(1,'2','8',1),
(1,'2','9',1),(1,'2','10',1),(1,'2','11',0.250),
(1,'2','13',1),(1,'2','14',1),(1,'2','15',2),(1,'2','16',1)


--SELECT * FROM FICHA_TECNICA

INSERT INTO CENTRO_CUSTO VALUES (1,'9001','PRESIDENCIA')
INSERT INTO CENTRO_CUSTO VALUES (1,'9002','ADMINISTRATIVO')
INSERT INTO CENTRO_CUSTO VALUES (1,'9003','PRODUCAO')
INSERT INTO CENTRO_CUSTO VALUES (1,'9004','SUPRIMENTOS')
INSERT INTO CENTRO_CUSTO VALUES (1,'9005','RH')
INSERT INTO CENTRO_CUSTO VALUES (1,'9006','FINANCEIRO')
INSERT INTO CENTRO_CUSTO VALUES (1,'9007','COMERCIAL')
INSERT INTO CENTRO_CUSTO VALUES (1,'9008','FISCAL')
INSERT INTO CENTRO_CUSTO VALUES (1,'9009','TI')

--SELECT * FROM CENTRO_CUSTO

INSERT INTO CENTRO_CUSTO VALUES (2,'9001','PRESIDENCIA')
INSERT INTO CENTRO_CUSTO VALUES (2,'9002','ADMINISTRATIVO')
INSERT INTO CENTRO_CUSTO VALUES (2,'9003','PRODUCAO')
INSERT INTO CENTRO_CUSTO VALUES (2,'9004','SUPRIMENTOS')
INSERT INTO CENTRO_CUSTO VALUES (2,'9005','RH')
INSERT INTO CENTRO_CUSTO VALUES (2,'9006','FINANCEIRO')
INSERT INTO CENTRO_CUSTO VALUES (2,'9007','COMERCIAL')
INSERT INTO CENTRO_CUSTO VALUES (2,'9008','FISCAL')
INSERT INTO CENTRO_CUSTO VALUES (2,'9009','TI')

INSERT INTO CARGOS VALUES (1,'PRESIDENTE'),(1,'GER COMERCIAL'),(
1,'VENDEDOR'),(1,'GER ADM'),
(1,'ASSISTENTE DE RH'),(1,'OPERADOR PRODUCAO'),
(1,'ESTOQUISTA'),(1,'ANALISTA DE SISTEMA'),
(1,'FATURISTA'),(1,'ASSISTENTE FINANCEIRO')

--Estamos desabilitando a numeração automática dos cargos quando inseridos
SET IDENTITY_INSERT CARGOS ON
--INSERT INTO CARGOS (COD_EMPRESA,COD_CARGO,NOME_CARGO) VALUES (2,10,'ASSISTENTE FINANCEIRO')
GO
INSERT INTO CARGOS(COD_EMPRESA,COD_CARGO,NOME_CARGO)
SELECT 2,COD_CARGO,NOME_CARGO FROM CARGOS
GO
SET IDENTITY_INSERT CARGOS OFF
GO

--SELECT * FROM CARGOS


--DELETE FROM CARGOS WHERE  COD_CARGO = '20'




-- Estre trigger foi criado para controle de numerações de cada matricula de suas respectivas empresas
-- ''instead of insert'' esta dizendo que ao invés de inserir, faça isso
CREATE TRIGGER TG_NUM_MATR ON FUNCIONARIO
INSTEAD OF INSERT AS BEGIN
DECLARE @PARAM VARCHAR(50),@MATRICULA INT,@COD_EMPRESA INT -- DECLARANDO VARIAVEIS
SET @PARAM = 'MATRICULA' -- SETANDO O VALOR DE PARAM
SELECT @MATRICULA = MATRICULA,@COD_EMPRESA = COD_EMPRESA FROM INSERTED -- SETANDO VALORES INICIAIS PARA CODIGO DA EMPRESA E MATRICULA
print(MATRICULA+' '+COD_EMPRESA);
IF @MATRICULA = 0 -- AQUI ESTAMOS VERIFICANDO SE O FUNCIONARIO QUE ESTA TENTANDO CADASTRAR É VALOR 0
BEGIN
SELECT @MATRICULA= VALOR+1 FROM PARAMETROS WHERE PARAM = @PARAM AND COD_EMPRESA = @COD_EMPRESA -- ESTAMOS SETANDO OS VALORES PARA MATRICULA PEGANDO DE BASE O VALOR QUE TEM NA TABELA PARAMETROS
INSERT INTO FUNCIONARIO --INSERINDO INFORMAÇÃO NA TABELA
SELECT COD_EMPRESA,@MATRICULA,COD_CC,NOME,RG,CPF,ENDERECO,NUMERO,BAIRRO,COD_CIDADE,DATA_ADMISS,DATE_DEMISS,DATA_NASC,TELEFONE,COD_CARGO FROM INSERTED WHERE 1=1
UPDATE PARAMETROS SET VALOR = VALOR+1 WHERE PARAM = @PARAM AND COD_EMPRESA = @COD_EMPRESA --AQUI ESTAMOS ATUALIZANDO A TABELA PARAMETROS PARA UM VALOR A MAIS
END
END



INSERT INTO FUNCIONARIO VALUES
 (1,0,'9001','JAMES LABRIE','1234567','123567990','RUA 1','2','SANTA CLAUS','AC00013','2017-01-03','','1980-12-25','','1')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9002','JONH LARAVEL','1234568','123567889','RUA 2','3','SANTA CLAUS','AC00328','2017-02-10','','1980-12-25','','4')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9003','PETER DOTNESK','3434568','123564578','RUA 3','4','SANTA CLAUS','AL02801','2017-02-09','','1980-12-25','','6')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9004','LARA POTTER','4434509','123576867','RUA 4','5','SANTA CLAUS','AL04708','2017-03-07','','1980-12-25','','7')
 INSERT INTO FUNCIONARIO VALUES
 (1,0,'9005','JESSICA SUTER','4534576','120367887','RUA 5','6','SANTA CLAUS','MG35050','2017-03-03','','1980-12-25','','5')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9006','PEDRO TESLA','4334568','123703885','RUA 6','7','SANTA CLAUS','MG34905','2017-04-15','','1980-12-25','','1')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9007','TIAGO FIELDER','9834568','147034889','RUA 7','8','SANTA CLAUS','PE07802','2017-04-20','','1980-12-25','','2')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9007','MALCON DEXTER','9834568','147067889','RUA 17','28','SANTA CLAUS','PB00304','2017-04-20','','1980-12-25','','3')
 INSERT INTO FUNCIONARIO VALUES
 (1,0,'9007','CHARLES NOIX','9894668','147067149','RUA 77','18','SANTA CLAUS','PI05599','2017-04-20','','1980-12-25','','3')
 INSERT INTO FUNCIONARIO VALUES
 (1,0,'9008','JOAO SPARK','7734568','643567888','RUA 8','22','SANTA CLAUS','RN12807','2017-05-07','','1980-12-25','','9')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9009','DAVID MANDRAKE','6634568','345567887','RUA 8','56','SANTA CLAUS','RS13904','2017-05-07','','1980-12-25','','8')
INSERT INTO FUNCIONARIO VALUES
 (1,0,'9002','SAMUEL DUPRET','8984568','159567887','RUA 23','89','SANTA CLAUS','SC12700','2017-05-07','','1980-12-25','','10')


 --SELECT * FROM FUNCIONARIO
--SELECT * FROM PARAMETROS


INSERT INTO USUARIOS (COD_EMPRESA,LOGIN,MATRICULA,SENHA,SITUACAO) VALUES
(1,'JAMESL','1','','A'),(1,'JONHL','2','','A'),(1,'PETERD','3','','A'),
(1,'LARAP','4','','A'),(1,'JESSICAS','5','','A'),(1,'PEDROT','6','','A'),
(1,'TIAGOF','7','','A'),(1,'MALCOND','8','','A'),(1,'CHARLESN','9','','A'),
(1,'JOAOS','10','','A'),(1,'DAVIDM','11','','A'),(1,'SAMUELD','12','','A')


--SELECT * FROM USUARIOS ORDER BY MATRICULA

UPDATE USUARIOS SET SENHA=CONVERT(VARCHAR(32),HashBytes('MD5',CONVERT(varchar,matricula)),2)


INSERT INTO COND_PAGTO VALUES ('A VISTA'),('3 X 30/60/90 DD'),('30 DD')

INSERT INTO COND_PAGTO_DET VALUES ('1','1',0,100)

INSERT INTO COND_PAGTO_DET VALUES ('2','1',30,33.34),('2','2',30,33.33),('2','3',30,33.3)

INSERT INTO COND_PAGTO_DET VALUES ('3','1',30,100)


-- Estamos aqui inserindo os vendedores tais trazendo o select do codigo e matricula de funcionarios, usando um inner join ele faz uma junção da tabela funcionarios e cargos que tem o mesmo código da empresa e codigo de cargo iguais, colocando um filtro que seleciona somente cargos com o nome vendedor, por fim ainda colocando mais
-- uma condição que concatenando o valor de funcionario que é codigo da empresa e matricula, não podendo conter dentro de vendendor
INSERT INTO VENDEDORES SELECT A.COD_EMPRESA,A.MATRICULA FROM FUNCIONARIO A INNER JOIN CARGOS B ON A.COD_EMPRESA = B.COD_EMPRESA AND A.COD_CARGO = B.COD_CARGO WHERE B.NOME_CARGO = 'VENDEDOR' AND CONCAT(A.COD_EMPRESA,A.MATRICULA) NOT IN (SELECT CONCAT(COD_EMPRESA,MATRICULA) FROM VENDEDORES)

select * from cargos
select * from funcionario

INSERT INTO GERENTES SELECT A.COD_EMPRESA,A.MATRICULA FROM funcionario A INNER JOIN CARGOS B ON A.COD_EMPRESA = B.COD_EMPRESA AND A.COD_CARGO = B.COD_CARGO WHERE B.NOME_CARGO = 'GER COMERCIAL' AND CONCAT(A.COD_EMPRESA,A.MATRICULA) NOT IN (SELECT CONCAT(COD_EMPRESA,MATRICULA) FROM GERENTES)


select distinct a.Nome,a.MATRICULA,a.COD_EMPRESA,b.NOME_CARGO from funcionario a inner join CARGOS b on a.COD_CARGO = b.COD_CARGO 


INSERT INTO CANAL_VENDAS_G_V VALUES (1,7,8),(1,7,9)
SELECT * FROM GERENTES
SELECT * FROM VENDEDORES
SELECT * FROM CANAL_VENDAS_G_V
SELECT * FROM CANAL_VENDAS_V_C

INSERT CANAL_VENDAS_V_C VALUES (1,8,13),(1,9,14)

INSERT INTO META_VENDAS VALUES (1,7,'2018','01',83.33),(1,7,'2018','02',83.33),(1,7,'2018','03',83.33),
(1,7,'2018','04',83.33),(1,7,'2018','05',83.33),(1,7,'2018','06',83.33),(1,7,'2018','07',83.33),
(1,7,'2018','08',83.33),(1,7,'2018','09',83.33),(1,7,'2018','10',83.33),(1,7,'2018','11',83.33),(1,7,'2018','12',83.33)


INSERT INTO META_VENDAS VALUES (1,8,'2018','01',83.33),(1,8,'2018','02',83.33),(1,8,'2018','03',83.33),
(1,8,'2018','04',83.33),(1,8,'2018','05',83.33),(1,8,'2018','06',83.33),(1,8,'2018','07',83.33),
(1,8,'2018','08',83.33),(1,8,'2018','09',83.33),(1,8,'2018','10',83.33),(1,8,'2018','11',83.33),(1,8,'2018','12',83.33)

UPDATE META_VENDAS SET MATRICULA_VEND = 9 where MATRICULA_VEND = 7

SELECT * FROM META_VENDAS
 
INSERT INTO CFOP VALUES ('5.101','VENDAS DE MERC'),('1.101','COMPRAS DE MERC')

SELECT * FROM CFOP